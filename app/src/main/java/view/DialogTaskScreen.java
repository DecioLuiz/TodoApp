package view;

import controller.TaskController;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import model.Project;
import model.Task;

/**
 *
 * @author decio
 */
public class DialogTaskScreen extends javax.swing.JDialog {

    TaskController controller;
    Project project;
    private Task task;

    public DialogTaskScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        hideErrorFields();

        controller = new TaskController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDialogTaskScreen = new javax.swing.JPanel();
        toolbarTaskScreen = new javax.swing.JPanel();
        labelTaskScreen = new javax.swing.JLabel();
        saveTask = new javax.swing.JLabel();
        salvarAlteracoes = new javax.swing.JLabel();
        panel2ProjectScreen = new javax.swing.JPanel();
        labelTaskName = new javax.swing.JLabel();
        labelTaskDescription = new javax.swing.JLabel();
        textFieldTaskName = new javax.swing.JTextField();
        scrollPanelProjectDescription = new javax.swing.JScrollPane();
        textFieldTaskDescription = new javax.swing.JTextArea();
        labelTaskDeadline = new javax.swing.JLabel();
        labelTaskNotes = new javax.swing.JLabel();
        scrollPanelTaskNotes = new javax.swing.JScrollPane();
        textAreaTaskNotes = new javax.swing.JTextArea();
        textFieldDeadline = new javax.swing.JFormattedTextField();
        labelNameError = new javax.swing.JLabel();
        labelDeadlineError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 600));

        panelDialogTaskScreen.setBackground(new java.awt.Color(155, 8, 0));

        toolbarTaskScreen.setBackground(new java.awt.Color(155, 8, 0));

        labelTaskScreen.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        labelTaskScreen.setForeground(new java.awt.Color(255, 255, 255));
        labelTaskScreen.setText("Tarefa");

        saveTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check(3).png"))); // NOI18N
        saveTask.setToolTipText("Salvar");
        saveTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveTaskMouseClicked(evt);
            }
        });

        salvarAlteracoes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        salvarAlteracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit_task.png"))); // NOI18N
        salvarAlteracoes.setToolTipText("Salvar Alterações");
        salvarAlteracoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salvarAlteracoesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout toolbarTaskScreenLayout = new javax.swing.GroupLayout(toolbarTaskScreen);
        toolbarTaskScreen.setLayout(toolbarTaskScreenLayout);
        toolbarTaskScreenLayout.setHorizontalGroup(
            toolbarTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolbarTaskScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTaskScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(salvarAlteracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveTask, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        toolbarTaskScreenLayout.setVerticalGroup(
            toolbarTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, toolbarTaskScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelTaskScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(toolbarTaskScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toolbarTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salvarAlteracoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel2ProjectScreen.setBackground(new java.awt.Color(204, 204, 204));

        labelTaskName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTaskName.setForeground(new java.awt.Color(29, 36, 64));
        labelTaskName.setText("Nome");

        labelTaskDescription.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTaskDescription.setForeground(new java.awt.Color(29, 36, 64));
        labelTaskDescription.setText("Descrição");

        textFieldTaskName.setBackground(new java.awt.Color(255, 255, 255));
        textFieldTaskName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldTaskName.setForeground(new java.awt.Color(29, 36, 64));
        textFieldTaskName.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));

        textFieldTaskDescription.setBackground(new java.awt.Color(255, 255, 255));
        textFieldTaskDescription.setColumns(20);
        textFieldTaskDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textFieldTaskDescription.setForeground(new java.awt.Color(29, 36, 64));
        textFieldTaskDescription.setRows(5);
        textFieldTaskDescription.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        scrollPanelProjectDescription.setViewportView(textFieldTaskDescription);

        labelTaskDeadline.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTaskDeadline.setForeground(new java.awt.Color(29, 36, 64));
        labelTaskDeadline.setText("Prazo");

        labelTaskNotes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTaskNotes.setForeground(new java.awt.Color(29, 36, 64));
        labelTaskNotes.setText("Notas");

        textAreaTaskNotes.setBackground(new java.awt.Color(255, 255, 255));
        textAreaTaskNotes.setColumns(20);
        textAreaTaskNotes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        textAreaTaskNotes.setForeground(new java.awt.Color(29, 36, 64));
        textAreaTaskNotes.setRows(5);
        textAreaTaskNotes.setWrapStyleWord(true);
        scrollPanelTaskNotes.setViewportView(textAreaTaskNotes);

        textFieldDeadline.setBackground(new java.awt.Color(255, 255, 255));
        textFieldDeadline.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 102)));
        textFieldDeadline.setForeground(new java.awt.Color(29, 36, 64));
        textFieldDeadline.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        textFieldDeadline.setToolTipText("Insira a data de prazo");

        labelNameError.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelNameError.setForeground(new java.awt.Color(212, 58, 0));
        labelNameError.setText("Campo de nome é obrigatório");

        labelDeadlineError.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelDeadlineError.setForeground(new java.awt.Color(212, 58, 0));
        labelDeadlineError.setText("Campo de prazo é obrigatório");

        javax.swing.GroupLayout panel2ProjectScreenLayout = new javax.swing.GroupLayout(panel2ProjectScreen);
        panel2ProjectScreen.setLayout(panel2ProjectScreenLayout);
        panel2ProjectScreenLayout.setHorizontalGroup(
            panel2ProjectScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2ProjectScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2ProjectScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanelProjectDescription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(labelTaskName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTaskDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldTaskName)
                    .addComponent(labelTaskDeadline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTaskNotes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollPanelTaskNotes)
                    .addComponent(textFieldDeadline, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addComponent(labelNameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelDeadlineError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel2ProjectScreenLayout.setVerticalGroup(
            panel2ProjectScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2ProjectScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTaskName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldTaskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNameError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTaskDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanelProjectDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTaskDeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDeadlineError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTaskNotes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanelTaskNotes, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelDialogTaskScreenLayout = new javax.swing.GroupLayout(panelDialogTaskScreen);
        panelDialogTaskScreen.setLayout(panelDialogTaskScreenLayout);
        panelDialogTaskScreenLayout.setHorizontalGroup(
            panelDialogTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbarTaskScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelDialogTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDialogTaskScreenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panel2ProjectScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelDialogTaskScreenLayout.setVerticalGroup(
            panelDialogTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDialogTaskScreenLayout.createSequentialGroup()
                .addComponent(toolbarTaskScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(550, Short.MAX_VALUE))
            .addGroup(panelDialogTaskScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelDialogTaskScreenLayout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(panel2ProjectScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDialogTaskScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDialogTaskScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveTaskMouseClicked

        saveTask.setVisible(true);

        try {
            if (isFieldsValid()) {
                Task task = new Task();

                task.setIdProject(project.getId());
                task.setName(textFieldTaskName.getText());
                task.setDescription(textFieldTaskDescription.getText());

                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date deadline = null;
                deadline = dateFormat.parse(textFieldDeadline.getText());
                task.setDeadLine(deadline);

                task.setNotes(textAreaTaskNotes.getText());
                task.setIsCompleted(false);
                task.setCreatedAt(new Date());
                task.setUpdateAt(new Date());
                controller.save(task);
                JOptionPane.showMessageDialog(rootPane, "Tarefa salva com sucesso!");
                this.dispose();
            } else {
                hideErrorFields();
                if (textFieldTaskName.getText().isEmpty()) {
                    labelNameError.setVisible(true);
                }

                if (textFieldDeadline.getText().isEmpty()) {
                    labelDeadlineError.setVisible(true);
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_saveTaskMouseClicked

    private void salvarAlteracoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salvarAlteracoesMouseClicked

        salvarAlteracoes.setVisible(true);

        try {
            if (isFieldsValid()) {
//                this.task = new Task();
                this.task.setIdProject(project.getId());
                this.task.setName(textFieldTaskName.getText());
                this.task.setDescription(textFieldTaskDescription.getText());

                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date deadline = null;
                deadline = dateFormat.parse(textFieldDeadline.getText());
                this.task.setDeadLine(deadline);

                this.task.setNotes(textAreaTaskNotes.getText());
                this.task.setIsCompleted(false);
                this.task.setCreatedAt(new Date());
                this.task.setUpdateAt(new Date());
                this.task.setId( task.getId());
                this.controller.update(task, task.getId());
                JOptionPane.showMessageDialog(rootPane, "Tarefa atualizada com sucesso!");
                this.dispose();
            } else {
                hideErrorFields();
                if (textFieldTaskName.getText().isEmpty()) {
                    labelNameError.setVisible(true);
                }

                if (textFieldDeadline.getText().isEmpty()) {
                    labelDeadlineError.setVisible(true);
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_salvarAlteracoesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogTaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogTaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogTaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogTaskScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogTaskScreen dialog = new DialogTaskScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelDeadlineError;
    private javax.swing.JLabel labelNameError;
    private javax.swing.JLabel labelTaskDeadline;
    private javax.swing.JLabel labelTaskDescription;
    private javax.swing.JLabel labelTaskName;
    private javax.swing.JLabel labelTaskNotes;
    private javax.swing.JLabel labelTaskScreen;
    private javax.swing.JPanel panel2ProjectScreen;
    private javax.swing.JPanel panelDialogTaskScreen;
    private javax.swing.JLabel salvarAlteracoes;
    private javax.swing.JLabel saveTask;
    private javax.swing.JScrollPane scrollPanelProjectDescription;
    private javax.swing.JScrollPane scrollPanelTaskNotes;
    private javax.swing.JTextArea textAreaTaskNotes;
    private javax.swing.JFormattedTextField textFieldDeadline;
    private javax.swing.JTextArea textFieldTaskDescription;
    private javax.swing.JTextField textFieldTaskName;
    private javax.swing.JPanel toolbarTaskScreen;
    // End of variables declaration//GEN-END:variables

    public void setProject(Project project) {
        this.project = project;
    }
    
    public void setTask(Task task) {
        this.task = task;
    }
    
    public void getTask(Task task) {
        this.task = task;
        this.textFieldTaskName.setText(this.task.getName());
        this.textFieldTaskDescription.setText(this.task.getDescription());
        this.textFieldDeadline.setText((String) this.task.getDeadLine().toString());
        this.textAreaTaskNotes.setText(this.task.getNotes());
    }
        

    public void hideErrorFields() {
        labelDeadlineError.setVisible(false);
        labelNameError.setVisible(false);
    }

    public void hideBotaoSaveTask() {
        salvarAlteracoes.setVisible(true);
        saveTask.setVisible(false);
    }

    public void hideBotaoSalvar() {
        salvarAlteracoes.setVisible(false);
        saveTask.setVisible(true);
    }

    public boolean isFieldsValid() {
        if ((!textFieldTaskName.getText().isEmpty()) && (!textFieldDeadline.getText().isEmpty())) {
            return true;
        } else {
            return false;
        }
    }
//    
//    public int setSelectedTask(int taskId) {
//        return taskId;
//    }
    
//    public Task geSelectedTask(int taskId) {
//        task = task.setId(taskId)
//        return task;
//    }

}
