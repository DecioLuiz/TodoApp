package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Project;
import model.Task;
import util.ButtonColumnCellRenderer;
import util.DeadlineColumnCellRenderer;
import util.TaskTableModel;

/**
 *
 * @author decio
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projectController;
    TaskController taskController;

    DefaultListModel projectsModel;
    TaskTableModel taskModel;

    public MainScreen() {
        initComponents();
        
        initDataController();
        initComponentsModel();
        
        decorateTableTask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneTasks = new javax.swing.JScrollPane();
        tableTasks = new javax.swing.JTable();
        panelMainScreen = new javax.swing.JPanel();
        toolbar = new javax.swing.JPanel();
        logoTodoApp = new javax.swing.JLabel();
        slogan = new javax.swing.JLabel();
        imageTodoApp = new javax.swing.JLabel();
        panelProjectsAdd = new javax.swing.JPanel();
        labelProjects = new javax.swing.JLabel();
        addProject = new javax.swing.JLabel();
        panelTasksAdd = new javax.swing.JPanel();
        labelTasks = new javax.swing.JLabel();
        addTask = new javax.swing.JLabel();
        panelProjectsList = new javax.swing.JPanel();
        projectsList = new javax.swing.JScrollPane();
        listProjects = new javax.swing.JList<>();
        panelTasksList = new javax.swing.JPanel();
        panelEmptyTasksList = new javax.swing.JPanel();
        labelListsEmpty = new javax.swing.JLabel();
        imageLists = new javax.swing.JLabel();
        labelListsTaskADD = new javax.swing.JLabel();

        scrollPaneTasks.setBorder(null);

        tableTasks.setBackground(new java.awt.Color(255, 255, 255));
        tableTasks.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableTasks.setForeground(new java.awt.Color(29, 36, 64));
        tableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Tarefa Concluída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTasks.setGridColor(new java.awt.Color(255, 255, 255));
        tableTasks.setRowHeight(40);
        tableTasks.setSelectionBackground(new java.awt.Color(253, 191, 92));
        tableTasks.setSelectionForeground(new java.awt.Color(155, 8, 0));
        tableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableTasks.setShowHorizontalLines(true);
        tableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTasksMouseClicked(evt);
            }
        });
        scrollPaneTasks.setViewportView(tableTasks);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(155, 8, 0));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("frameMainScreen"); // NOI18N

        panelMainScreen.setBackground(new java.awt.Color(155, 8, 0));

        toolbar.setBackground(new java.awt.Color(155, 8, 0));

        logoTodoApp.setBackground(new java.awt.Color(255, 255, 255));
        logoTodoApp.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        logoTodoApp.setForeground(new java.awt.Color(255, 255, 255));
        logoTodoApp.setIcon(new javax.swing.ImageIcon("/home/decio/Downloads/check(2).png")); // NOI18N
        logoTodoApp.setText(" Todo App");

        slogan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        slogan.setForeground(new java.awt.Color(255, 255, 255));
        slogan.setText(" Anote tudo, não esqueça de nada!");

        imageTodoApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainImage100.png"))); // NOI18N

        javax.swing.GroupLayout toolbarLayout = new javax.swing.GroupLayout(toolbar);
        toolbar.setLayout(toolbarLayout);
        toolbarLayout.setHorizontalGroup(
            toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolbarLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(slogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoTodoApp, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageTodoApp)
                .addGap(27, 27, 27))
        );
        toolbarLayout.setVerticalGroup(
            toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolbarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toolbarLayout.createSequentialGroup()
                        .addComponent(imageTodoApp)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(toolbarLayout.createSequentialGroup()
                        .addComponent(logoTodoApp, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(24, 24, 24))))
        );

        panelProjectsAdd.setBackground(new java.awt.Color(204, 204, 204));
        panelProjectsAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(102, 102, 102)));

        labelProjects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelProjects.setForeground(new java.awt.Color(155, 8, 0));
        labelProjects.setText("Projetos");

        addProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-add-40.png"))); // NOI18N
        addProject.setToolTipText("Adicionar Projeto");
        addProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProjectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelProjectsAddLayout = new javax.swing.GroupLayout(panelProjectsAdd);
        panelProjectsAdd.setLayout(panelProjectsAddLayout);
        panelProjectsAddLayout.setHorizontalGroup(
            panelProjectsAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProjectsAddLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(labelProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addProject)
                .addContainerGap())
        );
        panelProjectsAddLayout.setVerticalGroup(
            panelProjectsAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProjectsAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProjectsAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addProject))
                .addContainerGap())
        );

        panelTasksAdd.setBackground(new java.awt.Color(204, 204, 204));
        panelTasksAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(102, 102, 102)));

        labelTasks.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTasks.setForeground(new java.awt.Color(155, 8, 0));
        labelTasks.setText("Tarefas");

        addTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-add-40.png"))); // NOI18N
        addTask.setToolTipText("Adicionar Tarefa");
        addTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTaskMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelTasksAddLayout = new javax.swing.GroupLayout(panelTasksAdd);
        panelTasksAdd.setLayout(panelTasksAddLayout);
        panelTasksAddLayout.setHorizontalGroup(
            panelTasksAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTasksAddLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelTasks, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addTask)
                .addContainerGap())
        );
        panelTasksAddLayout.setVerticalGroup(
            panelTasksAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTasksAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTasksAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTask))
                .addContainerGap())
        );

        panelProjectsList.setBackground(new java.awt.Color(204, 204, 204));
        panelProjectsList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(102, 102, 102)));

        projectsList.setBorder(null);

        listProjects.setBackground(new java.awt.Color(204, 204, 204));
        listProjects.setBorder(null);
        listProjects.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        listProjects.setForeground(new java.awt.Color(29, 36, 64));
        listProjects.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listProjects.setToolTipText("Lista de Projetos");
        listProjects.setFixedCellHeight(40);
        listProjects.setSelectionBackground(new java.awt.Color(253, 191, 92));
        listProjects.setSelectionForeground(new java.awt.Color(155, 8, 0));
        listProjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listProjectsMouseClicked(evt);
            }
        });
        projectsList.setViewportView(listProjects);

        javax.swing.GroupLayout panelProjectsListLayout = new javax.swing.GroupLayout(panelProjectsList);
        panelProjectsList.setLayout(panelProjectsListLayout);
        panelProjectsListLayout.setHorizontalGroup(
            panelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(projectsList, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        panelProjectsListLayout.setVerticalGroup(
            panelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(projectsList, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        );

        panelTasksList.setBackground(new java.awt.Color(204, 204, 204));
        panelTasksList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, null, null, new java.awt.Color(102, 102, 102)));
        panelTasksList.setLayout(new java.awt.BorderLayout());

        panelEmptyTasksList.setBackground(new java.awt.Color(204, 204, 204));

        labelListsEmpty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelListsEmpty.setForeground(new java.awt.Color(155, 8, 0));
        labelListsEmpty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelListsEmpty.setText("Nenhuma tarefa por aqui!");
        labelListsEmpty.setToolTipText("");

        imageLists.setForeground(new java.awt.Color(29, 36, 64));
        imageLists.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLists.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-todo-list-100.png"))); // NOI18N
        imageLists.setToolTipText("");
        imageLists.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        labelListsTaskADD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelListsTaskADD.setForeground(new java.awt.Color(102, 102, 102));
        labelListsTaskADD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelListsTaskADD.setText("Click no botão '+' para adicionar uma nova tarefa");
        labelListsTaskADD.setToolTipText("");
        labelListsTaskADD.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout panelEmptyTasksListLayout = new javax.swing.GroupLayout(panelEmptyTasksList);
        panelEmptyTasksList.setLayout(panelEmptyTasksListLayout);
        panelEmptyTasksListLayout.setHorizontalGroup(
            panelEmptyTasksListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelListsEmpty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelEmptyTasksListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEmptyTasksListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLists, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addComponent(labelListsTaskADD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelEmptyTasksListLayout.setVerticalGroup(
            panelEmptyTasksListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEmptyTasksListLayout.createSequentialGroup()
                .addComponent(imageLists, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelListsEmpty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelListsTaskADD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTasksList.add(panelEmptyTasksList, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout panelMainScreenLayout = new javax.swing.GroupLayout(panelMainScreen);
        panelMainScreen.setLayout(panelMainScreenLayout);
        panelMainScreenLayout.setHorizontalGroup(
            panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
            .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMainScreenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelMainScreenLayout.createSequentialGroup()
                            .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(panelProjectsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(panelTasksAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap()))
        );
        panelMainScreenLayout.setVerticalGroup(
            panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 613, Short.MAX_VALUE)
            .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelMainScreenLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(panelProjectsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelTasksAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(panelMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelTasksList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelMainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProjectMouseClicked
        DialogProjectScreen dialogProjectScreen = new DialogProjectScreen(this, rootPaneCheckingEnabled);
        dialogProjectScreen.setVisible(true);
        
        dialogProjectScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_addProjectMouseClicked

    private void addTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTaskMouseClicked
        DialogTaskScreen dialogTaskScreen = new DialogTaskScreen(this, rootPaneCheckingEnabled);
        int projectIndex = listProjects.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        dialogTaskScreen.setProject(project);
        dialogTaskScreen.hideBotaoSalvar();
        
        dialogTaskScreen.setVisible(true);
        dialogTaskScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                int projectIndex = listProjects.getSelectedIndex();
                Project project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
    }//GEN-LAST:event_addTaskMouseClicked

    public int getSelectedTask() {
        int taskId = (int) tableTasks.getValueAt(tableTasks.getSelectedRow(), 4);
        return taskId;
    }
    private void tableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTasksMouseClicked
        int rowIndex = tableTasks.rowAtPoint(evt.getPoint());
        int columnIndex = tableTasks.columnAtPoint(evt.getPoint());
        Task task = taskModel.getTasks().get(rowIndex);
        


        int projectIndex;
        switch (columnIndex) {
            case 3:
                taskController.update(task, task.getId());
                break;
            case 4:
                JOptionPane.showMessageDialog(rootPane, "Editar a tarefa");
                DialogTaskScreen dialogTaskScreen = new DialogTaskScreen(this, rootPaneCheckingEnabled);
                projectIndex = listProjects.getSelectedIndex();
                Project project = (Project) projectsModel.get(projectIndex);

                dialogTaskScreen.setProject(project);
                dialogTaskScreen.getTask(task);
                dialogTaskScreen.setTask(task);
                dialogTaskScreen.hideBotaoSaveTask();

                dialogTaskScreen.setVisible(true);
                dialogTaskScreen.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosed(WindowEvent e) {
                        int projectIndex = listProjects.getSelectedIndex();
                        Project projectUpd = (Project) projectsModel.get(projectIndex);
                        loadTasks(projectUpd.getId());
                    }
                });
                
                taskController.update(task, task.getId());

                break;

            case 5:
                taskController.removeById(task.getId());
                taskModel.getTasks().remove(task);
                projectIndex = listProjects.getSelectedIndex();
                project = (Project) projectsModel.get(projectIndex);
                loadTasks(project.getId());
                break;

                
        }
    }//GEN-LAST:event_tableTasksMouseClicked


    private void listProjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listProjectsMouseClicked
        int projectIndex = listProjects.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        loadTasks(project.getId());
    }//GEN-LAST:event_listProjectsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addProject;
    private javax.swing.JLabel addTask;
    private javax.swing.JLabel imageLists;
    private javax.swing.JLabel imageTodoApp;
    private javax.swing.JLabel labelListsEmpty;
    private javax.swing.JLabel labelListsTaskADD;
    private javax.swing.JLabel labelProjects;
    private javax.swing.JLabel labelTasks;
    private javax.swing.JList<String> listProjects;
    private javax.swing.JLabel logoTodoApp;
    private javax.swing.JPanel panelEmptyTasksList;
    private javax.swing.JPanel panelMainScreen;
    private javax.swing.JPanel panelProjectsAdd;
    private javax.swing.JPanel panelProjectsList;
    private javax.swing.JPanel panelTasksAdd;
    private javax.swing.JPanel panelTasksList;
    private javax.swing.JScrollPane projectsList;
    private javax.swing.JScrollPane scrollPaneTasks;
    private javax.swing.JLabel slogan;
    private javax.swing.JTable tableTasks;
    private javax.swing.JPanel toolbar;
    // End of variables declaration//GEN-END:variables

    public void decorateTableTask() {

        //Customização da header da lista de tarevas (tableTasks)
        tableTasks.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tableTasks.getTableHeader().setBackground(new Color(246, 154, 11));
        tableTasks.getTableHeader().setForeground(new Color(255, 255, 255));
        
        tableTasks.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRenderer());
        
        tableTasks.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRenderer("edit"));
        tableTasks.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRenderer("remove"));

        //Criando um 'sort' automático para as colunas da tableTasks
//        tableTasks.setAutoCreateColumnsFromModel(rootPaneCheckingEnabled);
    }

    public void initDataController() {
        projectController = new ProjectController();
        taskController = new TaskController();
    }
    
    public void initComponentsModel() {
        projectsModel = new DefaultListModel();
        loadProjects();
        
        taskModel = new TaskTableModel();
        tableTasks.setModel(taskModel);
        
        if (!projectsModel.isEmpty()) {
            listProjects.setSelectedIndex(0);
            Project project = (Project) projectsModel.get(0);
            loadTasks(project.getId());
        }
        
    }
    
    public void loadTasks(int idProject) {
        List<Task> tasks = taskController.getAll(idProject);
        taskModel.setTasks(tasks);
        
        showTableTasks(!tasks.isEmpty());
    }
    
    private void showTableTasks (boolean hasTasks) {
        if (hasTasks) {
            if (panelEmptyTasksList.isVisible()) {
                panelEmptyTasksList.setVisible(false);
                panelTasksList.remove(panelEmptyTasksList);
            }
            
            panelTasksList.add(scrollPaneTasks);
            scrollPaneTasks.setVisible(true);
            scrollPaneTasks.setSize(panelTasksList.getWidth(),  panelTasksList.getHeight());
        } else {
            if (scrollPaneTasks.isVisible()) {
                scrollPaneTasks.setVisible(false);
                panelTasksList.remove(scrollPaneTasks);
            }
            panelTasksList.add(panelEmptyTasksList);
            panelEmptyTasksList.setVisible(true);
            panelEmptyTasksList.setSize(panelTasksList.getWidth(), panelTasksList.getHeight());
        }
    }

    public void loadProjects() {
       List<Project> projects = projectController.getAll();
       
       projectsModel.clear();
       
       for (int i = 0; i < projects.size(); i++) {
           Project project = projects.get(i);
           projectsModel.addElement(project);
       }
       listProjects.setModel(projectsModel);
    }


}
